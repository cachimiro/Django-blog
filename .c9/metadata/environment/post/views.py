{"filter":false,"title":"views.py","tooltip":"/post/views.py","ace":{"folds":[],"scrolltop":387.84375,"scrollleft":0,"selection":{"start":{"row":46,"column":63},"end":{"row":46,"column":63},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":36,"state":"qqstring3","mode":"ace/mode/python"}},"hash":"5a369df5763c3c3ed72c15b32a4861b8b31a43fe","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":5,"column":24},"end":{"row":5,"column":25},"action":"remove","lines":["."],"id":2},{"start":{"row":5,"column":23},"end":{"row":5,"column":24},"action":"remove","lines":["e"]},{"start":{"row":5,"column":22},"end":{"row":5,"column":23},"action":"remove","lines":["r"]},{"start":{"row":5,"column":21},"end":{"row":5,"column":22},"action":"remove","lines":["e"]},{"start":{"row":5,"column":20},"end":{"row":5,"column":21},"action":"remove","lines":["h"]},{"start":{"row":5,"column":19},"end":{"row":5,"column":20},"action":"remove","lines":[" "]},{"start":{"row":5,"column":18},"end":{"row":5,"column":19},"action":"remove","lines":["s"]},{"start":{"row":5,"column":17},"end":{"row":5,"column":18},"action":"remove","lines":["w"]},{"start":{"row":5,"column":16},"end":{"row":5,"column":17},"action":"remove","lines":["e"]},{"start":{"row":5,"column":15},"end":{"row":5,"column":16},"action":"remove","lines":["i"]},{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"remove","lines":["v"]},{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"remove","lines":[" "]},{"start":{"row":5,"column":12},"end":{"row":5,"column":13},"action":"remove","lines":["r"]},{"start":{"row":5,"column":11},"end":{"row":5,"column":12},"action":"remove","lines":["u"]},{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"remove","lines":["o"]},{"start":{"row":5,"column":9},"end":{"row":5,"column":10},"action":"remove","lines":["y"]},{"start":{"row":5,"column":8},"end":{"row":5,"column":9},"action":"remove","lines":[" "]},{"start":{"row":5,"column":7},"end":{"row":5,"column":8},"action":"remove","lines":["e"]},{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"remove","lines":["t"]},{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"remove","lines":["a"]},{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"remove","lines":["e"]},{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"remove","lines":["r"]},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"remove","lines":["C"]}],[{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"remove","lines":[" "],"id":3},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"remove","lines":["#"]},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":1,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["from __future__ import unicode_literals","","from django.shortcuts import render","",""],"id":4},{"start":{"row":1,"column":0},"end":{"row":46,"column":63},"action":"insert","lines":["from django.shortcuts import render, get_object_or_404, redirect","from django.utils import timezone","from .models import Post","from .forms import BlogPostForm","","","def get_posts(request):","    \"\"\"","    Create a view that will return a list","    of Posts that were published prior to 'now'","    and render them to the 'blogposts.html' template","    \"\"\"","    posts = Post.objects.filter(published_date__lte=timezone.now()","        ).order_by('-published_date')","    return render(request, \"blogposts.html\", {'posts': posts})","","","def post_detail(request, pk):","    \"\"\"","    Create a view that returns a single","    Post object based on the post ID (pk) and","    render it to the 'postdetail.html' template.","    Or return a 404 error if the post is","    not found","    \"\"\"","    post = get_object_or_404(Post, pk=pk)","    post.views += 1","    post.save()","    return render(request, \"postdetail.html\", {'post': post})","","","def create_or_edit_post(request, pk=None):","    \"\"\"","    Create a view that allows us to create","    or edit a post depending if the Post ID","    is null or not","    \"\"\"","    post = get_object_or_404(Post, pk=pk) if pk else None","    if request.method == \"POST\":","        form = BlogPostForm(request.POST, request.FILES, instance=post)","        if form.is_valid():","            post = form.save()","            return redirect(post_detail, post.pk)","    else:","        form = BlogPostForm(instance=post)","    return render(request, 'blogpostform.html', {'form': form})"]}]]},"timestamp":1578485137477}